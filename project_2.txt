前情回顾

1. git的使用
   
   基础命令  git init 
             git status
	     git add 
	     git commit 
	     git log
	     git diff

   版本的控制
             git reset --hard   HEAD^
	                        commit_id
				tag
	     git reflog

   工作区保存
             git stash

   分支处理
             git branch  -a
	                 -d
	                 name
	     
	     git checkout  -b

	     git merge


2. 远程仓库控制

   * 创建共享仓库
   * 连接远程仓库
     
     git  remote  add 
                  rm
     
     git clone 
   
   * 上传   git  push -u  origin   branch

   * 获取   git  pull
            git  fetch

***********************************************

1. 确定技术
   
   通信    tcp通信
   并发    多进程并发
   数据库  mysql

2. 确定数据库 ： 建立几个表，每个表作用和存储内容
      
   * 建表

     create database dict charset=utf8;
     
     用户表 ： id   name   passwd
     
     create table user (id int primary key auto_increment,name varchar(32) not null,passwd varchar(128) not null);

     历史记录：id   name   word   time

     create table hist (id int primary key auto_increment,name varchar(32) not null,word varchar(32) not null,time varchar(64) not null);

     单词表： id   word  mean


   * 编写程序将单词本存入到数据库

     create table words (id int primary key auto_increment,word varchar(32),mean text);



3. 结构设计
   
   客户端
   服务端 （处理数据）

4. 功能分析
   
   客户端和服务端分别需要实现哪些功能
   
   网络模型

   注册
   
      客户端  * 输入注册信息
              * 将信息发送给服务端
	      * 等待反馈

      服务端  * 接收注册信息
              * 验证用户是否存在
	      * 插入数据库
              * 将信息反馈个客户端

   登录 
      客户端 * 输入登录信息
             * 发送请求
	     * 得到回复
      
      服务端 * 接收请求
             * 判断是否允许登录
	     * 反馈结果

   查单词
   历史记录


协议指定 ：  注册  R name passwd
             登录  L name  passwd



cookie ： 
        import  getpass
	getpass.getpass()
	功能: 隐藏输入内容
	返回值： 输入的内容字符串

cookie ：
  import hashlib

  生成加密对象 参数为 "盐"
  hash = hashlib.md5(("Levi"+"the-sat").encode())
  
  对密码进行算法加密
  hash.update(passwd.encode())
  
  获取加密后的密码字串
  hash.hexdigest()


作业 ： 1.  完成登录功能
        2.  httpserver v2.0
